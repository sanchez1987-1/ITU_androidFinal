package ru.myhousingservice.myservices.dao

import androidx.room.*
import kotlinx.coroutines.flow.Flow
import ru.myhousingservice.myservices.model.CTickets
import java.util.*

/********************************************************************************************************
 * Интерфейс содержит запросы в СУБД на получение/запись данных.                                        *
 * @author Селетков И.П. 2022 1116.                                                                     *
 *******************************************************************************************************/
@Dao
interface IDAOTickets {
    /****************************************************************************************************
     * Получение списка всех элементов.                                                                 *
     ***************************************************************************************************/
    @Query("SELECT * FROM tickets")
    fun getAllFlow()                        : Flow<List<CTickets>>

    /****************************************************************************************************
     * Запрос элемента по идентификатору.                                                               *
     * @param id - идентификатор элемента для поиска.                                                   *
     * @return объект с идентификатором id или пустой поток в случае отсутствия.                        *
     ***************************************************************************************************/
    @Query("SELECT * FROM tickets WHERE id=:id")
    fun getByIdFlow(
        id                                  : UUID
    )                                       : Flow<CTickets>

    @Query("SELECT * FROM tickets WHERE id=:id")
    fun getById(
        id                                  : UUID
    )                                       : CTickets?
    /****************************************************************************************************
     * Сохранение нескольких новых элементов в БД.                                                      *
     * @param items - объект или объекты для сохранения.                                              *
     ***************************************************************************************************/
    @Insert
    suspend fun insertAll(
        vararg items                      : CTickets
    )

    /****************************************************************************************************
     * Обновление существующего объекта.                                                                *
     * @param item - объект для обновления.                                                           *
     ***************************************************************************************************/
    @Update
    suspend fun update(
        item                                : CTickets
    )

    /****************************************************************************************************
     * Удаление существующего объекта.                                                                  *
     * @param item - объект для удаления.                                                             *
     ***************************************************************************************************/
    @Delete
    suspend fun delete(
        item                                : CTickets)
}